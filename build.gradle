plugins {
    id "java-library"
    id "org.openjfx.javafxplugin" version "0.0.9"
    id "maven-publish"
    id "signing"
}

group "bayern.steinbrecher"
version "0.13-rc.1-SNAPSHOT"

repositories {
    mavenCentral()
}

dependencies {
    implementation "bayern.steinbrecher:JavaUtility:0.17"

    testImplementation "org.junit.jupiter:junit-jupiter-api:5.7.0"
    testImplementation "org.junit.jupiter:junit-jupiter-params:5.7.0"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:5.7.0"
}

compileJava.options.encoding = "UTF-8"

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

java {
    modularity.inferModulePath = true
    withSourcesJar()
    withJavadocJar()
}

test {
    useJUnitPlatform()
}

javafx {
    version = "14"
    modules = [
            "javafx.controls",
            "javafx.fxml",
            "javafx.swing" // NOTE Only required for testing
    ]
}

javadoc {
    if(JavaVersion.current().isJava9Compatible()) {
        options.addBooleanOption("html5", true)
    }
}

publishing {
    repositories {
        maven {
            name = "OSSRH"
            def releasesRepoUrl = "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
            def snapshotsRepoUrl = "https://oss.sonatype.org/content/repositories/snapshots/"
            url = version.endsWith("SNAPSHOT") ? snapshotsRepoUrl : releasesRepoUrl
            credentials {
                username = "${ossrhUsername}"
                password = "${ossrhPassword}"
            }
        }
    }
    publications {
        library(MavenPublication) {
            pom {
                name = "CheckedElements"
                description = "A collection of JavaFX control elements with extended validation mechanisms."
                url = "https://steinbrecher.bayern"
                licenses {
                    license {
                        name = "The Beer-Ware License (Revision 42)"
                    }
                }
                developers {
                    developer {
                        id = "stefanHuber"
                        name = "Stefan Huber"
                        email = "stefan.huber.niedling@outlook.com"
                    }
                }
                scm {
                    connection = "scm:git:git://github.com/TrackerSB/CheckedElements.git"
                    developerConnection = "scm:git:ssh://github.com/TrackerSB/CheckedElements.git"
                    url = "https://github.com/TrackerSB/CheckedElements"
                }
            }
            from components.java
        }
    }
}

signing {
    useGpgCmd()
    sign publishing.publications.library
}
